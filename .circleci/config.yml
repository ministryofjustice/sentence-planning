version: 2.1

orbs:
  dps: ministryofjustice/dps@1.2.1
  snyk: snyk/snyk@0.0.10

executors:
  image-scan:
    docker:
      - image: circleci/python:3
    working_directory: ~/app
  builder:
    docker:
      - image: circleci/node:10.15.3-browsers
    working_directory: ~/app
  sonar-scanner:
    docker:
      - image: sonarsource/sonar-scanner-cli:4.2
        environment:
          SONAR_HOST_URL: https://pcs-sonarqube.apps.live-1.cloud-platform.service.justice.gov.uk/
          SONAR_PROJECT_KEY: sentence-planning
    working_directory: ~/app

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-${CACHE_VERSION}-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-${CACHE_VERSION}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Linter check
          command: npm run lint
      - run:
          command: |
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - assets/stylesheets
            - .cache/Cypress

  test:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-${CACHE_VERSION}-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  app-scan:
    executor: builder
    steps:
      - checkout
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
          organization: 'digital-probation-services'

  image-scan:
    executor: image-scan
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - snyk/scan:
          docker-image-name: 'quay.io/hmpps/sentence-planning:latest'
          target-file: 'Dockerfile'
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/latest'
          organization: 'digital-probation-services'

  sonar-scan:
    executor: sonar-scanner
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Run sonar scan
          command: |
            set -euo pipefail
            declare -a args
            add_env_var_as_env_prop() {
              if [ "$1" ]; then
                args+=("-D$2=$1")
              fi
            }
            add_env_var_as_env_prop "${SONAR_LOGIN:-}" "sonar.login"
            add_env_var_as_env_prop "${SONAR_PASSWORD:-}" "sonar.password"
            add_env_var_as_env_prop "${SONAR_USER_HOME:-}" "sonar.userHome"
            add_env_var_as_env_prop "${SONAR_PROJECT_BASE_DIR:-}" "sonar.projectBaseDir"
            add_env_var_as_env_prop "${SONAR_PROJECT_KEY:-}" "sonar.projectKey"
            PROJECT_BASE_DIR="$PWD"
            if [ "${SONAR_PROJECT_BASE_DIR:-}" ]; then
              PROJECT_BASE_DIR="${SONAR_PROJECT_BASE_DIR}"
            fi
            export SONAR_USER_HOME="$PROJECT_BASE_DIR/.sonar"
            sonar-scanner "${args[@]}"

workflows:
  version: 2
  scheduled:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - app-scan
      - image-scan
      - sonar-scan:
          requires:
            - build
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - test:
          requires:
            - build
      - dps/helm_lint:
          name: helm_lint
          env: development
          chart_name: sentence-planning
      - dps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - master
                - dps-orb 
      - dps/deploy_env:
          name: deploy_dev
          env: "development"
          filters:
            branches:
              only:
                - master
                - dps-orb 
          requires:
            - helm_lint
            - test
            - build_docker
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - dps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context: sentence-planning-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - dps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          context: sentence-planning-prod
          requires:
            - request-prod-approval

